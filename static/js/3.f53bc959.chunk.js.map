{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunkCreator","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","alt","aboutMe","lookingForAJobDescription","Preloader","Post","item","message","likeCount","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","posts","postsElements","map","p","id","postsBlock","AddMyPostsFormRedux","onSubmit","values","addPost","newMyPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfileThunkCreator","getStatusThunkCreator","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.f53bc959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1yGOj\",\"img\":\"ProfileInfo_img__3iXWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2PbKd\",\"posts\":\"MyPosts_posts__1RwQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__CkvLJ\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\n// import React, {ChangeEvent} from \"react\";\r\n// import classes from './ProfileInfo.module.css';\r\n//\r\n//\r\n// class ProfileStatus extends React.Component<any> {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n//\r\n//     deactivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         })\r\n//         this.props.updateStatusThunkCreator(this.state.status)\r\n//     }\r\n//\r\n//     onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({status: e.currentTarget.value})\r\n//\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps: any, prevState: any) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----------------\"}</span>\r\n//                 </div>\r\n//                 }\r\n//                 {this.state.editMode &&\r\n//                 <div>\r\n//                     <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n//                            value={this.state.status}></input>\r\n//                 </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// export default ProfileStatus;\r\n\r\nexport type ProfileStatusWithHooksType = {\r\n    status: string,\r\n    updateStatusThunkCreator: (status: string) => void\r\n}\r\nconst ProfileStatusWithHooks = (props: ProfileStatusWithHooksType) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunkCreator(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"----------------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}></input>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfilePropsType} from \"../Profile\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusThunkCreator}: ProfilePropsType) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatusThunkCreator={updateStatusThunkCreator}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\ntype PostType ={\r\n    id:number\r\n    message:string\r\n    likeCount:number\r\n}\r\n\r\nconst Post = (props:PostType) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src=\"https://avatars.mds.yandex.net/get-pdb/750997/2f4a61ff-0c60-41d6-a2f1-049bc4ee8f21/s1200?webp=false\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype FormDataType = {\r\n    newMyPost: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newMyPost: string) => void\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props: MyPostsType) => {\r\n    console.log(props.posts)\r\n    let postsElements = props.posts.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    // let onAddPost = () => {\r\n    //     props.addPost();\r\n    //     //props.dispatch(addPostActionCreator());\r\n    // }\r\n    //\r\n    // let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     let text = e.currentTarget.value;\r\n    //     props.updateNewPostText(text);\r\n    //     //props.dispatch(updateNewPostTextActionCreator(text))\r\n    // }\r\n\r\n    let addNewPost = (values: FormDataType) => {\r\n        props.addPost(values.newMyPost)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddMyPostsFormRedux onSubmit={addNewPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nconst AddMyPostsForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMyPost\" placeholder=\"Enter your post\"\r\n                       validate={[required, maxLength10]}/>\r\n                {/*<textarea value={props.newPostText} onChange={onPostChange}/>*/}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMyPostsFormRedux = reduxForm<FormDataType>({form: 'profileAddNewMyPost'})(AddMyPostsForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC, ProfileReducersTypes} from \"../../../redux/profile-reducer\";\r\n\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     }\r\n//\r\n//                     let onPostChange = (text: string) => {\r\n//                         let action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     }\r\n//\r\n//                     return <MyPosts updateNewPostText={onPostChange} addPost={addPost}\r\n//                                     posts={state.profileReducer.posts}\r\n//                                     newPostText={state.profileReducer.messageForNewPost}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch<ProfileReducersTypes>) => {\r\n    return {\r\n        addPost: (newMyPost: string) => {\r\n            dispatch(addPostAC(newMyPost));\r\n        }\r\n\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileInfoType} from \"../../redux/profile-reducer\";\r\n\r\nexport type ProfilePropsType = {\r\n    profile: null | ProfileInfoType,\r\n    status: string,\r\n    updateStatusThunkCreator: (status: string) => void\r\n\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatusThunkCreator={props.updateStatusThunkCreator}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreator,\r\n    ProfileInfoType,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter, Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: null | ProfileInfoType\r\n    status: string\r\n    authorizedUserId: null\r\n    isAuth:boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfileThunkCreator: (userId: number) => void\r\n    getStatusThunkCreator: (userId: number) => void\r\n    updateStatusThunkCreator: (status: string) => void\r\n}\r\ntype PathParamsTYpe = {\r\n    userId: string\r\n}\r\ntype ProfilePropsType = MapDispatchPropsType & MapStatePropsType\r\ntype PropsType = RouteComponentProps<PathParamsTYpe> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<any, PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatusThunkCreator={this.props.updateStatusThunkCreator}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfileThunkCreator,\r\n        getStatusThunkCreator,\r\n        updateStatusThunkCreator\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n// let WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n//\r\n// export default withAuthRedirect(connect(mapStateToProps, {getUserProfileThunkCreator})(WithUrlDataContainerComponent));"],"sourceRoot":""}